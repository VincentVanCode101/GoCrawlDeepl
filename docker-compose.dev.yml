services:
  goCrawlDeeplDev:
    container_name: goCrawlDevtainer
    image: crawl-deepl:dev
    build: 
      context: .
      target: dev
    volumes:
      
      - go-build-cache:/root/.cache/go-build
      - go-modules:/go/pkg/mod
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      CHAT_ID: ${CHAT_ID}
      FROM_LANGUAGE: ${FROM_LANGUAGE}
      TO_LANGUAGE: ${TO_LANGUAGE}
    entrypoint: ["/bin/bash", "-c"]
    command: [
      "make test && tail -f /dev/null"
    ]
    # the tests are executed in the docker-compose.dev.yml again, after they have
    # just been executed in the Dockerfile to build this dev-container, because
    # the - ./app:/usr/src/app volume-mount happens after the building of the image
    # and because the test_coverage directory is empty/non-existent in the host
    # the test_coverage inside the container is overriden with "an empty directory"
    # 
    # So to have the test_coverage filled with the test coverages for the below
    # defined WebServer to serve the data after starting the container up, the
    # tests have to be executed again

  webServer:
    container_name: webServerDevtainer
    image: crawl-deepl-test-display-server:dev
    build:
      context: ./app_for_test_display
    volumes:
      - ./app/test_coverage/:/test_coverage
    ports:
      - 8080:8080
    environment:
      PORT: 8080

volumes:
  go-build-cache:
  go-modules:
